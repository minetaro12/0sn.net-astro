---
import { getEntry, render } from 'astro:content'
import BaseLayout from '../../../../layouts/BaseLayout.astro'
import { getSortedPosts } from '../../../../lib/posts'
import Icon from '../../../../components/Icon.astro'

export const getStaticPaths = async () => {
  const posts = await getSortedPosts()
  return posts.map((post) => ({
    params: {
      date: post.id.split('/')[0],
      post: post.id.split('/')[1],
    },
  }))
}

const { date, post } = Astro.params

const entry = await getEntry('posts', `${date}/${post}`)

if (!entry) {
  throw new Error(`Post not found: ${date}/${post}`)
}

const { Content, headings } = await render(entry)
---

<BaseLayout title={entry.data.title} tags={entry.data.tags}>
  <div>
    <div class="flex flex-col gap-2">
      <h1 class="text-2xl font-bold">{entry.data.title}</h1>
      <div class="flex gap-2">
        {
          entry.data.tags.map((tag) => (
            <a
              href={`/tags/${tag}/`}
              class="bg-button hover:bg-button-hover rounded p-1 text-sm"
            >
              <Icon name="tag" />
              {tag}
            </a>
          ))
        }
      </div>
      <div class="text-sm">
        <Icon name="calendar" />
        {
          new Date(entry.data.date).toLocaleString('ja-JP', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit',
          })
        }
      </div>
      <div></div>
    </div>
    <div
      class="grid grid-cols-1 gap-y-4 data-[toc=false]:block md:grid-cols-3 md:gap-x-4"
      data-toc={entry.data.showToc}
    >
      {
        entry.data.showToc && (
          <div class="col-span-1 md:order-last">
            <div class="bg-button rounded p-4 md:sticky md:top-16">
              <div class="mb-2 text-xl font-bold">Table of Contents</div>
              <ol class="ml-4 list-disc">
                {headings
                  .filter((heading) => heading.depth < 4)
                  .map((heading) => (
                    <li data-depth={heading.depth} class="data-[depth=3]:ml-4">
                      <a href={`#${heading.slug}`} class="hover:underline">
                        {heading.text}
                      </a>
                    </li>
                  ))}
              </ol>
            </div>
          </div>
        )
      }
      <div class="markdown-body post col-span-2">
        <Content />
      </div>
    </div>
  </div>
</BaseLayout>
